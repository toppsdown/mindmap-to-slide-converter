<map version="0.9.0"><attribute_registry SHOW_ATTRIBUTES="hide"/>
<node ID="D26124CF-EBF9-4F5D-9D09-8E1AB4C9C946" TEXT="Simplified Slides" STYLE="bubble" FOLDED="false" CREATED="1480866107000" MODIFIED="1480866110000"><font SIZE="14" /><edge COLOR="#D5D5D5" /><node ID="D994E0C9-B811-4F50-B5BB-1018541545C5" TEXT="Title Slide" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="E7B02586-6A84-43FB-8BDA-540C08647234" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="E5535FE3-E9B8-4BA0-B1F9-359C270D45E6" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="F087F989-1611-4E09-9BE3-0FAC1118355F" TEXT="Week 1" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="8EA06231-6B97-4D52-978B-10E46F6B816B" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="EED5F009-9904-41B7-898A-94CDFD2A95E4" TEXT="Intro to programming with Ruby" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="2392A5FF-C47A-4395-AA0F-1DE367018F32" TEXT="What we're learning today" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="824CE5AD-F3B6-4DC2-8213-25333FFB3341" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="36F5001C-B017-4FF9-94E3-C23CEDA93CC0" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="C4A895BA-651C-489A-AA06-6FB66648379C" TEXT="What are we learning today?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="0B7D4B06-D8D0-48A2-B0CF-BE909F771DE8" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="8C0D5609-5677-4C96-A07A-17E4F0728A68" TEXT="1) Problem solving framework" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="0BBA93EB-D00D-4303-A9C6-886BA0869B30" TEXT="2) Data Types" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="F3C1394D-D5FE-4F09-B56A-75B685AD2B69" TEXT="2.1) Arrays&#10;2.2) Strings&#10;2.3) Booleans&#10;2.4) Conditionals" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="70AD5540-01AA-4E6A-BD9C-C5C7AF3926DE" TEXT="3) Abstraction" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="EF6F1284-0FE9-4C5F-A9DC-A2E71FB8D006" TEXT="3.1) Variables&#10;3.2) Loops&#10;3.3) Functions" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node></node><node ID="C0DD6C6D-7254-44B3-A81A-89FC3A32CE86" TEXT="Introduction to programming" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="A3777EAD-0F65-4434-B5D3-1C5DD599F093" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="D70AA9C7-AF83-45A0-8C42-D45CFD59BE7A" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="CF201AD5-2CC2-4A4F-A478-A7CF42F59FC8" TEXT="What is programming?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="13BEAF4E-136D-40B8-905E-6299AE52652C" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="1FCE37B4-6ABD-4468-8BD8-EE2C906D9219" TEXT="Teaching computers to solve problems" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="E7469D85-5EE1-4803-8EAC-974CC8600754" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="FC90CE1E-9858-45AD-B682-9FDA694DB287" TEXT="Teaching computers to solve problems" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="EF526099-3B75-4A65-B46A-D256A864232B" TEXT="imagine the computer is a child" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="D80A1B66-F7FC-4E9D-8E01-F3A698B407C0" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="4374E1ED-12EE-4169-95F1-1D0FC3B07AF2" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="3DE607F6-A864-491E-84DF-CA719381B4BE" TEXT="How do we program?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="8D42020A-BBF9-4DB1-94C9-3FF6BC393825" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="7FEBD60A-89E5-4345-8354-8A741129FBD3" TEXT="1) Understand the problem" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="CEFDDC59-8EA1-4B1F-920B-35D63B0554DF" TEXT="2) Break the problem down into thousands of pieces" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="A9F86571-1667-4E78-A8A3-F73D77A100E5" TEXT="3) Teach the computer how to solve each tiny piece" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="FE949C0A-26AA-451C-B943-C18D8E5D248C" TEXT="4) Tell the computer to solve each piece in order" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="B5BFD38C-8D6C-435F-B354-E1655722D881" TEXT="5) Computer now knows how to solve the problem!" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="9E77DD78-CA4C-4581-9F85-A8D543D5F0F4" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="FBF9ADEC-FA36-46B7-AF45-8E65DE850FD3" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="CFE41E56-7D8B-4C42-B29D-9773596EB74B" TEXT="Why is Programming hard?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="36347C6A-4C78-4A4A-BEA8-DC3620853882" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="BD501960-EFEF-4103-8F3C-3BD3D1742188" TEXT="1) Computers are dumb" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="5E091B7A-6F3E-4F50-B903-805FC0FDEBF6" TEXT="2) Computers can only do ONE thing at a time" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="30C39CFC-7F12-48EE-BC0A-0F745C1E57E1" TEXT="3) Computers need every tiny piece spelled out for them" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="31B53D7A-A7FC-493D-B264-F03B3752BCF9" TEXT="4) Computers don't speak english" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="C2863CEA-7C1E-44B1-B316-DCE2D2B91988" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="94712C3E-DA23-41F3-B5E5-EF9A36FCB2EC" TEXT="Computers do not have intelligence, they will follow our instructions exactly" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="1B469E1B-C01F-47E9-BBCD-6B768382502A" TEXT="When we talk to each other, we have a common context by which we communicate.  Our language is full of ambiguities so we have to make assumptions about what the other speaker means.  Computers do not make assumptions" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="512A0244-7B1B-4129-A7DD-6B41C7153D5E" TEXT="Human language is imprecise.  Computer language is not" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="A4C2FE72-11FF-408A-8296-EBC62BE13932" TEXT="The hard part of programming is not learning the language, it's being able to critically analyze all the contexts that we take for granted when we communicate to each other" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="596DA281-5A7A-483A-92A6-0195C31F846F" TEXT="One of the most important things to remember is that COMPUTERS CAN ONLY DO ONE THING AT A TIME" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="AF0C7099-8342-465F-A82F-A28871D5713F" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="1D150C78-1407-495A-975F-2942EC35D0D9" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="FB7BE5AC-5C78-4D08-8C20-33E7EED9AEBA" TEXT="Exercise: How to make a PBJ Sandwich" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="DBC08668-34FA-47B9-9BDD-CC61B47FE6AA" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="466C0329-5614-4E38-91F3-EB9B847C4A06" TEXT="Spend 1 minute writing out the instructions for how to make a PBJ sandwich" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="6F0741E9-38FA-4036-9172-DC88908422D9" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="72CE600A-673D-4B56-B4EE-299F0351004A" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="62DC0218-AFAD-4E94-99CE-80B0011045BB" TEXT="Exercise: Teach me to make a PBJ Sandwich" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="B445D33F-52E8-4BC9-8E31-6AD966F9BA46" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0DD2F547-9DB5-40A9-AF88-5ACB1DBD28C5" TEXT="Teacher will be the computer" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="F6BA2159-2F51-4FD1-AB0A-FBDB646399D3" TEXT="Your words will be the program the teacher follows" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="7891391E-8729-467B-B37C-39C049B86D1A" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="6543B54F-1EA1-42BB-A5A3-C443F96656DB" TEXT="Teacher acts like a computer and only does things literally" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="2584B0D9-E031-44F2-B09A-024A92C91B25" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="E0321AC5-F9C4-4590-9A0F-FCBD8C337FB8" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="3992E967-3FB8-405C-8060-D50DD7F2BA96" TEXT="Exercise: Conclusions" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="AC1DCFFA-7BB3-4661-99C6-43F40FE63F9B" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="4A55EDA6-0944-4F61-B6A5-5C2B7887B853" TEXT="1) Computers are literal&#10;2) Computers can only do one thing at a time" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="6DB91AF9-5F56-4599-96A3-86D488FA63FF" TEXT="How do we start to think like a computer?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="6C100DA7-563D-4DFF-BBD4-DEDF30997CF1" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="51F73147-C586-4321-8773-4F68F8416403" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="48A2D436-A05D-4365-B862-FDDCAD3AA0FE" TEXT="Scary word alert: Algorithm" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="FCFC2046-9990-425A-9750-D5D54430708E" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="C25A143D-E23F-4E7A-AED5-CF89C7B08FB6" TEXT="An algorithm is a set of instructions for how to solve a problem" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="41A86F19-5E65-43CE-8C3F-F7995A54EA62" TEXT="Exercise: Check for ingredients" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="3CAEAF8A-7C09-4026-9AA3-875C3C91C1E4" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="6AACF7DD-D69D-415D-A8D9-B250FEEF99C8" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="70894492-EA32-4364-AE87-3273EE69A7DE" TEXT="Exercise: Check for ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="080C3388-24F9-457E-9F32-626C804171BF" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="02AAB0D4-A91B-4215-BC15-D544C98B1685" TEXT="Let's break down the process of checking for ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="BAE2FAF4-9C49-40B4-9E1A-7625542A385C" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="A13AD99C-2255-4431-BBFE-F74C85BCA30B" TEXT="1) Define required ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="E046EBDE-31C3-4502-A605-F0A93D732358" TEXT="2) Define current inventory of ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="961B49AE-140A-4418-BC37-4E36B2A2C798" TEXT="3) check each item in required ingredients against each item in inventory of ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="4A4F2873-ED0C-43BA-8DA5-4927FF087D82" TEXT="Intro to REPL.it" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="39F067C1-20D4-4EDC-88D0-BBBF35675242" TEXT="File vs Interactive" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="55E2D365-BFE3-4650-8DFA-1071FCFDE278" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="8A276F0D-2020-445C-A0EF-96D0FD1C54B4" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="967F262B-8D43-440F-A640-D4396F6FE51F" TEXT="REPL.it: File" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="C7E616CE-ED45-4734-9EAC-72FB6E0C9821" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="131846B0-73C5-4AEA-A7A2-FE40E8C12236" TEXT="We can write all our code here" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="B4B396DC-3454-4F33-B7C8-E9CCB1803EE9" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="B5C3458A-DF39-47A4-8482-1642F583893B" TEXT="We write our code in the file side.  We can save our work here" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="B533D5EB-692D-423D-88F7-A47FAC51B066" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="AA795132-6E30-4173-8C6C-21A67303CBC4" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="2943CC9F-2E23-45B8-B17C-249B31FABF3F" TEXT="REPL.it: Interactive session" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="AA45D1FC-6D82-40A2-A690-ABC68C274465" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="95BBB938-CFC1-4EB2-9B53-5104DEA02F01" TEXT="The interactive session loads our code and lets us play with it" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="0970553A-DDD4-400F-8057-BEE1135DD380" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="429E1315-BD2B-4371-A41A-53647F726A8B" TEXT="The interactive session does not get saved.  When we click &quot;Run&quot; all the code in our file side is run and loaded into the interactive session" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="A2A8F95B-C313-40AA-B155-F2846C0E9578" TEXT="The last thing executed in our file will be returned in the interactive session" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="6A52E68C-76E4-452A-B695-986791D5CAD4" TEXT="Create two documents" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="2DBB8CA2-315F-4AAF-99D8-084A866865DD" TEXT="One for our main work" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="CCFDC42E-FC08-4BD4-882D-C7D227E33F27" TEXT="One as a scratch pad" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="A9DEDD65-4065-448C-A6EF-1C5B81898836" TEXT="Show how you can see the history of your changes so you can reference them later" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="08B0C079-332F-4421-9F2B-303103DB1AAA" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="3A890BC2-87D2-4AEC-8C00-FD0FD5074FC7" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="DC9DF721-C491-4A5A-8267-3B5A1905DB6A" TEXT="Exercise A: 1) Define required ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="07E14DBB-961B-4DBF-8207-44F88EB2D5DA" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="C2D14245-83AE-4FDF-8B24-70366003985B" TEXT="Create a list of required ingredients in Repl.IT" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="0340AFF0-2D02-4DAE-B613-119631DB5579" TEXT="Topics:" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="DE446C37-011E-470C-8BDB-1D5B2AA6D63C" TEXT="Arrays: https://github.com/toppy42/rampup-ruby/blob/master/explanations/array.md" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="1BCBC3F3-DCD6-4BF4-A5F4-C9D77F7BD449" TEXT="Strings: https://github.com/toppy42/rampup-ruby/blob/master/explanations/string.md" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="7C5DF3DE-A671-4AE4-91CE-6908AAEA5C0A" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="9D571E67-F6EE-47F9-A48D-398CA5A84066" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="FFA0630C-E607-44A6-9B92-AD700B4C4BAC" TEXT="Exercise A: 3) Compare ingredients to inventory" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="D60CE673-FC5A-44AC-A614-E4E2158CFA4D" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="DE9FAF1F-8B6B-4BD8-AA1D-003F4C0F0EAD" TEXT="What are the steps for comparing the ingredients and inventory?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="F3AC15AE-9797-43DB-BE9B-C6F1996D8526" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="4B9FCE56-C540-4A78-9A3A-876F3D8A1537" TEXT="See code exercise notes" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="14058486-E32A-4449-9436-798659FFF514" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="13D054D2-F798-4912-9267-82112C055F97" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="CE77A7C8-C604-42FE-A425-85DCC9B3E976" TEXT="Exercise A: 3) Compare ingredients to inventory" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="376A9DA8-F604-4FFB-B073-657D7045FB59" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="FF3E324E-AFC6-47A2-8C3E-0833423097F9" TEXT="Topics:" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="CBCB3932-466E-4BAC-8442-0511F840BADB" TEXT="Array Indexes" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="9F359ECE-89D7-41FA-90F2-76440D639BC5" TEXT="Booleans: https://github.com/toppy42/rampup-ruby/blob/master/explanations/boolean.md" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="207ACA4E-C14C-4DA2-B03F-15BD5754F31F" TEXT="Boolean Comparisons" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480873209000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="47FB5785-853C-472A-9D76-55B35626A355" TEXT="Boolean Operators" STYLE="fork" FOLDED="false" CREATED="1480873210000" MODIFIED="1480873211000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="C1894174-2487-4594-9A1A-BD44DE928291" STYLE="fork" FOLDED="false" CREATED="1480873832000" MODIFIED="1480873832000"><edge COLOR="#D5D5D5" /><node ID="29B7FE68-4A35-4606-8206-9473AB32DCBA" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480873832000" MODIFIED="1480873834000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="AFEE9E9B-EEF0-4F6D-9311-B8E24CDEBC1D" TEXT="Cleanup your code with abstraction" STYLE="fork" FOLDED="false" CREATED="1480873834000" MODIFIED="1480873848000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="C67BF9D0-FE14-41A5-9793-ECE56C1FD794" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480873836000" MODIFIED="1480873836000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="95BEA163-292C-46A3-B8A6-C8FAC0057E71" TEXT="What is abstraction?: Abstraction is when we make something less literal" STYLE="fork" FOLDED="false" CREATED="1480873836000" MODIFIED="1480873858000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="A25A1FDE-04E8-4A95-8495-0FCB5094E48E" TEXT="When we name a person, the name is an abstraction of that person" STYLE="fork" FOLDED="false" CREATED="1480873836000" MODIFIED="1480873836000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="CCEA05DE-1AF2-435F-AE12-0360B42BE1EC" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="9D97FD16-33DD-4F45-9684-A8ABC719C9C0" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="A928CD4D-1894-4ABB-B5EA-4C54D94160CD" TEXT="Exercise A:  4) Abstract with Variables" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="7111963D-514C-4A02-96FE-824E16DF2E74" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="60EC2C06-39D1-4BCB-AB87-23345AF8F07E" TEXT="What if our inventory list changed?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="B56DA24E-5773-478E-83CB-5AB1356848FE" TEXT="1) Use variables to avoid repeating our inventory list" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="DF8D69AC-F47D-4A8B-A331-FCC0D38390F2" TEXT="2) Use variables to save the output of our boolean comparisons" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="E1EFF92B-D54B-46F1-9465-F360DE6D2E83" TEXT="https://github.com/toppy42/rampup-ruby/blob/master/explanations/variable.md" STYLE="fork" FOLDED="false" CREATED="1480866565000" MODIFIED="1480866565000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="8FA98F7E-9F98-42AB-8BCE-F8EE5CBAE384" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><edge COLOR="#D5D5D5" /><node ID="42472031-FDB7-488E-9322-C6FD046886E7" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="DFF69594-AC7E-46A5-8E96-FC7B18EF14AA" TEXT="Exercise A: 5) Check all ingredients" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="5BBF3436-A596-4E9A-A42C-6AD0E61C8782" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="02102524-14BD-4CDF-9137-A0B82FE5E8B4" TEXT="Use boolean operator (&amp;&amp;) to answer the question: Do we have all the necessary ingredients?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="05A68B5B-DB97-4B64-8E72-C1D2100FF3F5" TEXT="Set inventory to: &lt;code&gt;['peanut butter', 'bread', 'jelly']&lt;/code&gt;.  What happens?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="4BA9668B-AA67-423D-91E4-47E3FC98C2ED" TEXT="Set inventory to: &lt;code&gt;['peanut butter', 'pickles', 'jelly']&lt;/code&gt;.  What happens?" STYLE="fork" FOLDED="false" CREATED="1480866144000" MODIFIED="1480866144000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="5DDADCFB-D8B3-4FC0-B58C-041A5EEF525E" TEXT="Programming framework" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="55AB06CD-ED81-4870-A9FF-8E0A71275DAE" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><edge COLOR="#D5D5D5" /><node ID="26BA03C7-E74B-4F06-AF03-D281BDEE5FB3" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="57105FEE-F657-4E54-9A7D-5244378B8C43" TEXT="Problem solving framework" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="C3DDE6C8-6CC9-43F5-BC92-58F630BAC09D" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866445000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="3E6051F9-0FAC-4FE1-B02F-CB924D271C01" TEXT="1) Define the problem&#10;2) List the subproblems&#10;3) Solve/Recurse" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="9D69D9AF-C988-4DD6-8FAC-7BDF18FD82BC" TEXT="We will continue to use this framework to start thinking like computers" STYLE="fork" FOLDED="false" CREATED="1480866431000" MODIFIED="1480866443000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="6B699310-F365-4786-AFDE-D67638477A2F" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="26050239-5AF1-4F23-B31F-D262B452E10A" TEXT="So how do we start to think like a computer?" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="23C0F61A-EC11-45EB-AF01-1D8E9E52470E" TEXT="A lot of the problems we think about doing are actually lots of little problems put together" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="FDCE96AB-2D26-41B8-9122-0F2B529140B8" TEXT="Because computers can only do one thing at a time, we need to break down our problems as small as possible" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="023F5F6B-88CB-4ED4-9019-8C2E3E42BB99" TEXT="Subject: Recursion" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="5B9F6348-2FD8-46BC-A626-8F5DE70FC5FB" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><edge COLOR="#D5D5D5" /><node ID="F0A78E16-DC4F-4142-9DF1-411CE0BE0ECC" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="2AE6D0B1-097B-4BF8-8F05-F91B6E1889C2" TEXT="Scary word alert: Recursion" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="B4C1E1BD-B384-43FA-8672-FC98DD315238" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="22D1ED42-8F02-4EF3-B3E4-7569E621467B" TEXT="Recursion: Repeating the same process with a smaller part of the original problem" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="B39B5876-BDEF-4641-A79B-BE71EF879419" TEXT="We stop recursing when the problem is simple enough to solve" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="9F7261B7-698E-4F7D-A791-510DB660FCC4" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="C87EC6B3-DBE5-478A-AB36-045569A10529" TEXT="What I mean by recursion here in our framework is that we will use the same framework on each of the subproblems until they are simple enough that we know how to tell the computer how to do them" STYLE="fork" FOLDED="false" CREATED="1480866360000" MODIFIED="1480866360000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node></node><node ID="ED791C2F-C9AF-4D4E-9A67-85FED440A0C5" TEXT="Debugging" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480870731000" MODIFIED="1480870733000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="7DCC2B1E-31B5-45D6-A5F1-3D892E8721B8" STYLE="fork" FOLDED="false" CREATED="1480870734000" MODIFIED="1480870734000"><edge COLOR="#D5D5D5" /><node ID="72E555CD-2EE7-4D68-ACD3-E8D27DC1AC8B" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480870735000" MODIFIED="1480870740000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="98621232-A17B-4599-BFF0-FB7BB8CC9338" TEXT="Debugging a problem" STYLE="fork" FOLDED="false" CREATED="1480870740000" MODIFIED="1480870743000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="D2B4BEE6-7F0A-49A5-A106-28406FEA3B92" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480870757000" MODIFIED="1480870766000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="8185051A-C7AC-4E74-AD24-83854ABE29C2" TEXT="What does this code return?  What should it return?" STYLE="fork" FOLDED="false" CREATED="1480870759000" MODIFIED="1480870810000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="F4DFB8B7-82A5-4985-BB78-06F19679AFD5" TEXT="&lt;code&gt;['bread', 'peanut butter'][0] =='bread' || &#10;['bread', 'peanut butter'][1] =='bread' &amp;&amp; &#10;['bread', 'peanut butter'][0] =='jelly' || &#10;['bread', 'peanut butter'][1] =='jelly'&lt;/code&gt;" STYLE="fork" FOLDED="false" CREATED="1480870787000" MODIFIED="1480870787000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="9BD5537F-118B-4152-B871-F6A4F94B44FA" STYLE="fork" FOLDED="false" CREATED="1480870862000" MODIFIED="1480870862000"><edge COLOR="#D5D5D5" /><node ID="BE633C1F-CF40-45D9-B71C-623633F7877B" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480870863000" MODIFIED="1480870864000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0C3A3FEC-E0D4-49F7-B008-6D7FA9899F20" TEXT="Precedence: The order of operations" STYLE="fork" FOLDED="false" CREATED="1480870864000" MODIFIED="1480871666000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="B3ABF29D-580A-443D-9E2A-02A3702DC2CC" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480870867000" MODIFIED="1480871806000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="F0DB370B-4B8A-4EC0-A6A5-D3C369C72DAF" TEXT="https://github.com/toppy42/rampup-ruby/blob/master/explanations/precedence.md" LINK="https://github.com/toppy42/rampup-ruby/blob/master/explanations/precedence.md" STYLE="fork" FOLDED="false" CREATED="1480871731000" MODIFIED="1480871731000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="D0B2F927-2CAF-461B-83B1-76CA877F8CB1" STYLE="fork" FOLDED="false" CREATED="1480871826000" MODIFIED="1480871826000"><edge COLOR="#D5D5D5" /><node ID="DDC520B5-EF21-4DF3-9513-D6F929581B97" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480871826000" MODIFIED="1480871828000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0083A83C-6F78-49E4-9877-C6D0F57E43A0" TEXT="Exercise B: Showing Precedence" STYLE="fork" FOLDED="false" CREATED="1480871828000" MODIFIED="1480871853000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="5D7CEE5F-3022-4812-BB30-CA0BFFCA830B" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480871857000" MODIFIED="1480871858000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0B95D43E-5A77-4F14-A2F9-9F3D59454CF2" TEXT="Using the precedence table in that link, let's walk through all steps the computer takes when executing that code" STYLE="fork" FOLDED="false" CREATED="1480871859000" MODIFIED="1480871859000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="AE09A734-A60F-44EB-AB24-370A2C2A38C2" TEXT="https://www.techotopia.com/index.php/Ruby_Operator_Precedence" STYLE="fork" FOLDED="false" CREATED="1480871912000" MODIFIED="1480871913000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="D21B8534-57F8-403E-8719-0E79FD906A6C" TEXT="Control flow" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480866667000" MODIFIED="1480866669000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="DBE16019-9C4A-4ECE-92A5-52C04D3397F9" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><edge COLOR="#D5D5D5" /><node ID="57401DC2-3108-4420-BCE8-87C04EB6002E" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="D27D6949-4C40-42E1-B5B7-386B83DC3E65" TEXT="Control Flow" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="BD238D08-5FDF-418A-8D33-E12B4F67216A" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872401000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0278CD83-627E-417A-A194-69874130F247" TEXT="Telling a computer how to make decisions" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="00AABD4C-AAEC-4E30-A238-C06169820467" TEXT="https://github.com/toppy42/rampup-ruby/blob/master/explanations/control_flow.md" STYLE="fork" FOLDED="false" CREATED="1480872398000" MODIFIED="1480872399000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="DEC23B34-6A6B-47DA-8D2B-33CEFA3A4F68" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><edge COLOR="#D5D5D5" /><node ID="B26FFC52-12EA-4E88-9935-9DD03D6B06AB" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0A409198-142A-47F4-9ABB-0DEFA699BE4F" TEXT="Exercise C: Control Flow" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872856000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="3CF1FE42-EF91-4C60-9FA1-4139084F14F4" TEXT="SSC" STYLE="fork" FOLDED="false" CREATED="1480872190000" MODIFIED="1480872190000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="C775414C-05A3-4669-B38D-8264FCAD77FA" TEXT="Let's check our inventory and tell the user whether they have all the ingredients or if they need to go to the store" STYLE="fork" FOLDED="false" CREATED="1480872852000" MODIFIED="1480872877000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="19CA9830-E6FF-43C8-A303-82ED348CC920" TEXT="While Loop" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480872975000" MODIFIED="1480872977000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="0BDCC5CA-926C-40E9-B4DF-5E9D598E7775" TEXT="Subject: Loops" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="5C57889B-EDEC-4180-BC2E-31E54D9EFB86" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><edge COLOR="#D5D5D5" /><node ID="1B42AFBF-13EA-4409-AB2D-1999D4B2229E" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="9BC8BE85-4E9B-44FE-871B-F2A7C7006D1E" TEXT="Exercise D: Abstract with a while loop" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873560000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="489616DF-1D6A-4530-9B6B-A743FC09BDC3" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873580000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="59D74224-FBF7-40D8-9790-FB0DB097799D" TEXT="Loops are how we tell the computer to do something multiple times" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="65835748-779D-4DD4-ADF3-F0BFD93F461A" TEXT="https://github.com/toppy42/rampup-ruby/blob/master/explanations/loop.md" STYLE="fork" FOLDED="false" CREATED="1480873581000" MODIFIED="1480873582000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="4FDE0BEB-61CA-4A44-9670-AFA0259DE6E3" TEXT="TN" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="BC662083-5E68-4C88-92AB-D852F0FB7080" TEXT="In our current code, we are repeating the same check " STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="FA641B78-6EAA-48C6-A530-B8A6F405C8FE" TEXT="what's the difference between the checks?" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="A161F6CF-FA23-492A-B024-C1FAC944655D" TEXT="the index" STYLE="fork" FOLDED="false" CREATED="1480873024000" MODIFIED="1480873024000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node><node ID="5A1AA4DB-26E1-478C-B08C-9760949E9FCD" STYLE="fork" FOLDED="false" CREATED="1480873302000" MODIFIED="1480873302000"><edge COLOR="#D5D5D5" /><node ID="8EC0A2C7-3EE0-4432-931A-4A59C94CEB7C" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480873304000" MODIFIED="1480873306000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="E0481A82-71C8-47CA-8F28-50650332098A" TEXT="Exercise D: Abstract with loops" STYLE="fork" FOLDED="false" CREATED="1480873306000" MODIFIED="1480873314000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="98FF2D83-4CAD-4423-883C-CDF2A6A4CD5D" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480873315000" MODIFIED="1480873318000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="8E730AA4-C6FD-4397-9B7E-85C5D52B6A90" TEXT="How can we use a while loop to clean this up?" STYLE="fork" FOLDED="false" CREATED="1480873326000" MODIFIED="1480873725000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="E2F4BC18-9645-4E14-87B2-DDC9054D6B4C" TEXT="What happens to this code if we add another item to the inventory?  " STYLE="fork" FOLDED="false" CREATED="1480873728000" MODIFIED="1480873729000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="CA0983E0-9B1B-48FA-95C6-CE2DF6726147" TEXT="&lt;code&gt;&#10;inventory[0] == 'peanut butter' ||&#10;inventory[1] == 'peanut butter' ||&#10;inventory[2] == 'peanut butter'&#10;&lt;/code&gt;" STYLE="fork" FOLDED="false" CREATED="1480873323000" MODIFIED="1480873323000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node></node><node ID="A3EE8678-7A15-4963-A244-1BA24F4E8DF2" TEXT="Functions" STYLE="fork" FOLDED="false" POSITION="right" CREATED="1480874003000" MODIFIED="1480874009000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="E8BAA141-1174-4030-8710-75BEDEF879B3" STYLE="fork" FOLDED="false" CREATED="1480874005000" MODIFIED="1480874005000"><edge COLOR="#D5D5D5" /><node ID="D3B0F54F-C2AC-4B94-8911-98C2724EB47D" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480874005000" MODIFIED="1480874005000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="764F5682-DCA4-4F38-8D08-FDAC217EAC23" TEXT="Abstraction: Functions" STYLE="fork" FOLDED="false" CREATED="1480874005000" MODIFIED="1480874005000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="958E533F-BA58-49E2-A3FC-FB0F269D539C" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480874005000" MODIFIED="1480874005000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="842E8A90-B04E-4C72-8197-7B7D3418C274" TEXT="Functions allow us to give a name to code" STYLE="fork" FOLDED="false" CREATED="1480875132000" MODIFIED="1480875155000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="C4E17A10-79F5-4C50-BF5E-F46F263DC940" TEXT="We can then call that name to execute the code anywhere we want" STYLE="fork" FOLDED="false" CREATED="1480875156000" MODIFIED="1480875163000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="815AB052-2D34-452A-AA7B-F2AD0B9C3EB9" TEXT="https://github.com/toppy42/rampup-ruby/blob/master/explanations/function.md" STYLE="fork" FOLDED="false" CREATED="1480874031000" MODIFIED="1480874032000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node><node ID="95FE0747-3464-4385-A178-033689DDD64F" STYLE="fork" FOLDED="false" CREATED="1480875174000" MODIFIED="1480875174000"><edge COLOR="#D5D5D5" /><node ID="43DAB348-383A-4A43-84BE-549B60E068CF" TEXT="Header" STYLE="fork" FOLDED="false" CREATED="1480875175000" MODIFIED="1480875176000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="DD59D68C-7DAE-4FDD-9DEF-D1132E850D4B" TEXT="Exercise E: Abstract with Functions" STYLE="fork" FOLDED="false" CREATED="1480875176000" MODIFIED="1480875183000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node><node ID="70D5D593-8B6F-4650-8099-8961476644FF" TEXT="MSCV" STYLE="fork" FOLDED="false" CREATED="1480875186000" MODIFIED="1480875187000"><font SIZE="12" /><edge COLOR="#D5D5D5" /><node ID="6788B19B-4321-491F-A4D0-9116B4E9C4DF" TEXT="1) Write a function that checks the inventory array for peanut butter" STYLE="fork" FOLDED="false" CREATED="1480875190000" MODIFIED="1480875246000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node><node ID="04CBD877-98D2-4075-888D-A2675F541B69" TEXT="2) Write a function that takes any item and inventory list and checks if it is in the inventory" STYLE="fork" FOLDED="false" CREATED="1480875219000" MODIFIED="1480875247000"><font SIZE="12" /><edge COLOR="#D5D5D5" /></node></node></node></node></node></map>